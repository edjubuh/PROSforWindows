<ma:MetroWindow x:Class="PROSforWindows.Views.MainWindow" x:Name="window"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:local="clr-namespace:PROSforWindows.Views"
                xmlns:ma="http://metro.mahapps.com/winfx/xaml/controls"
                xmlns:u="clr-namespace:PROSforWindows.Controls"
                mc:Ignorable="d" 
                BorderThickness="0"
                Title="{Binding Path=Project.ProjectDirectory, Converter={StaticResource UriToNameConverter}, FallbackValue='PROS for Windows'}" TitleAlignment="Center"
                Height="350" Width="525" MinHeight="300" MinWidth="400" WindowStartupLocation="CenterScreen" ResizeMode="CanResizeWithGrip" 
                WindowTransitionsEnabled="False">
    <ma:MetroWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Views/MainWindowDictionary.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Resources/PurdueAccent.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Resources/Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </ma:MetroWindow.Resources>
    <Grid>
        <Grid.Style>
            <Style TargetType="{x:Type Grid}">
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ma:MetroWindow}}, Path=IsActive}" Value="False">
                        <Setter Property="Background" Value="{DynamicResource InactiveWindowBrush}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Margin="4,0,4,4">
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Height" Value="100" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ma:MetroWindow}}, Path=Width, Converter={StaticResource CutoffConverter}, ConverterParameter=800}" Value="True">
                            <Setter Property="Height" Value="60" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ma:MetroWindow}}, Path=WindowState}" Value="Maximized">
                            <Setter Property="Height" Value="60" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- Buttons -->
            <!-- New Button -->
            <Button Content="{DynamicResource NewIcon}" Height="27">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MetroButton}">
                        <Setter Property="Grid.Row" Value="0" />
                        <Setter Property="Grid.Column" Value="0" />
                        <Setter Property="Margin" Value="0,0,3,0" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ma:MetroWindow}}, Path=Width, Converter={StaticResource CutoffConverter}, ConverterParameter=800}" Value="True">
                                <Setter Property="Grid.Column" Value="0" />
                                <Setter Property="Grid.Row" Value="0" />
                                <Setter Property="Margin" Value="0,0,0,3" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ma:MetroWindow}}, Path=WindowState}" Value="Maximized">
                                <Setter Property="Grid.Column" Value="0" />
                                <Setter Property="Grid.Row" Value="0" />
                                <Setter Property="Margin" Value="0,0,0,3" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <!-- Open Button -->
            <Button Content="{DynamicResource OpenIcon}" Height="27" Command="{Binding OpenCommand}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MetroButton}">
                        <Setter Property="Grid.Row" Value="0" />
                        <Setter Property="Grid.Column" Value="1" />
                        <Setter Property="Margin" Value="3,0" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ma:MetroWindow}}, Path=Width, Converter={StaticResource CutoffConverter}, ConverterParameter=800}" Value="True">
                                <Setter Property="Grid.Column" Value="0" />
                                <Setter Property="Grid.Row" Value="1" />
                                <Setter Property="Margin" Value="0,3" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ma:MetroWindow}}, Path=WindowState}" Value="Maximized">
                                <Setter Property="Grid.Column" Value="0" />
                                <Setter Property="Grid.Row" Value="1" />
                                <Setter Property="Margin" Value="0,3" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <ListView Grid.Row="0" Grid.Column="2" Grid.RowSpan="3" Background="{x:Null}" BorderBrush="{x:Null}"
                      ScrollViewer.VerticalScrollBarVisibility="Disabled" BorderThickness="0"
                      ItemsSource="{Binding Buttons}" ItemTemplateSelector="{StaticResource ButtonDataTemplateSelector}">
                <ListView.Style><Style></Style></ListView.Style>
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel IsItemsHost="True" Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
            </ListView>
        </Grid>

        <!-- Console Output -->
        <TextBox Name="console" Text="{Binding Path=Project.Output}" Grid.Row="1" 
                 VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Padding="5"
                 FontFamily="Lucida Console" IsReadOnly="True" TextChanged="console_TextChanged">
            <TextBox.Template>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Background="{TemplateBinding Background}" >
                        <ScrollViewer.Template>
                            <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                <Grid Background="{TemplateBinding Background}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="6" />
                                        <ColumnDefinition Width="14" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="20"/>
                                        <RowDefinition />
                                        <RowDefinition Height="14" />
                                    </Grid.RowDefinitions>

                                    <!-- Clear console button -->
                                    <Button Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
                                            Command="{Binding ClearConsoleCommand}">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="Foreground" Value="{DynamicResource CampusGold}" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid Background="{TemplateBinding Background}">
                                                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ma:MetroWindow}}, Path=IsActive}" Value="False" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush4}" />
                                                            <Setter Property="Foreground" Value="#FF252525" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ma:MetroWindow}}, Path=IsActive}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                                                            <Setter Property="Foreground" Value="#FF252525" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Foreground" Value="Transparent" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                        <TextBlock FontFamily="Segoe UI Symbol" FontSize="10" VerticalAlignment="Center">&#57610;</TextBlock>
                                    </Button>

                                    <!-- Vertical Scroll bar  -->
                                    <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Grid.Row="1" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>

                                    <!-- Horizontal Scroll bar  -->
                                    <ScrollBar x:Name="PART_HorizontalScrollBar" VerticalAlignment="Bottom" Grid.Column="0" Grid.ColumnSpan="2" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" 
                                   Grid.Row="3" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="Black" />

                                    <!-- Content -->
                                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                CanHorizontallyScroll="False" CanVerticallyScroll="False"
                                                Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"
                                                Grid.RowSpan="2" />
                                </Grid>
                            </ControlTemplate>
                        </ScrollViewer.Template>
                    </ScrollViewer>
                </ControlTemplate>
            </TextBox.Template>
        </TextBox>

        <!-- Status Bar -->
        <StatusBar Grid.Row="2" Visibility="{Binding Path=Project.IsExecuting, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
            <StatusBarItem HorizontalAlignment="Center">
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                    <ma:ProgressRing Height="Auto" Width="Auto" VerticalAlignment="Center"
                                     Foreground="White"
                                     IsActive="{Binding Path=Project.IsExecuting, FallbackValue=True, Mode=OneWay}">
                    </ma:ProgressRing>
                    <TextBlock FontFamily="Myriad Pro" FontStyle="Italic" FontWeight="Bold"
                               Foreground="White"
                               VerticalAlignment="Center" Margin="10,0,0,0">EXECUTING...</TextBlock>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>

        <!-- Open project pane -->
        <Grid Grid.Row="0" Margin="0,70,0,0" Grid.RowSpan="2" Background="{StaticResource DarkGray}"
              Visibility="{Binding OpeningFolder, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Hidden}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <TextBlock Text="Recent Projects" FontSize="16" Foreground="White" Grid.Row="0" Grid.Column="0" Margin="5"/>
            <ListView Grid.Row="1" Grid.Column="0" Margin="0,5" />
            <TextBlock Text="Open Project" FontSize="16" Foreground="White" Grid.Row="0" Grid.Column="1" Margin="5"/>
            <u:FolderPicker Grid.Column="1" Grid.Row="1" Margin="0,5" SelectButtonText="Open" SelectCommand="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ma:MetroWindow}}, Path=DataContext.OpenFolderCommand}" SelectedFolder="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ma:MetroWindow}}, Path=DataContext.SelectedFolder}"/>
        </Grid>
    </Grid>


    <!-- Window Commands -->
    <ma:MetroWindow.RightWindowCommands>
        <ma:WindowCommands>
            <Button Content="settings" />
        </ma:WindowCommands>
    </ma:MetroWindow.RightWindowCommands>
</ma:MetroWindow>
