<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PROSforWindows.Views"
                    xmlns:ma="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:s="clr-namespace:PROSforWindows.Selectors">

    <FontFamily x:Key="HeaderFontFamily">Myriad Pro Bold, Segoe UI Light, Lucida Sans Unicode, Verdana</FontFamily>

    <Style TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" MaxHeight="{TemplateBinding MaxHeight}" MaxWidth="{TemplateBinding MaxWidth}">
                        <Border BorderThickness="0,0,0,2">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderBrush" Value="{x:Null}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked}" Value="True">
                                            <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush4}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="1">
                                <Rectangle.Style>
                                    <Style TargetType="Rectangle">
                                        <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPressed}" Value="True">
                                                <Setter Property="Fill" Value="{DynamicResource AccentColorBrush4}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked}" Value="True">
                                                <Setter Property="Fill" Value="{DynamicResource AccentColorBrush4}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMouseOver}" Value="True">
                                                <Setter Property="Fill" Value="{DynamicResource AccentColorBrush3}" />
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPressed}" Value="True" />
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsEnabled}" Value="False">
                                                <Setter Property="Opacity" Value="0.25" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                                <Rectangle.OpacityMask>
                                    <VisualBrush>
                                        <VisualBrush.Visual>
                                            <ContentPresenter Content="{TemplateBinding Content}" />
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="Button_WithoutButtons">
        <Button Content="{Binding Name}" ToolTip="{Binding Description}" Command="{Binding ExecuteCommand}" MinHeight="25" Margin="1.5"/>
    </DataTemplate>

    <DataTemplate x:Key="Button_WithButtons">
        <Menu HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderThickness="1" MinHeight="25" Margin="1.5"
              FontSize="{DynamicResource UpperCaseContentFontSize}" FontFamily="{DynamicResource DefaultFont}" FontWeight="Bold">
            <Menu.Template>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Grid IsItemsHost="True" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                </ControlTemplate>
            </Menu.Template>

            <MenuItem ItemsSource="{Binding Buttons}" ToolTip="{Binding Description}" Command="{Binding ExecuteCommand}">
                <MenuItem.Header>
                    <Grid Background="Transparent" Margin="3,0">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <TextBlock Text="{Binding Name, Converter={StaticResource ToUpperConverter}}" />
                            <TextBlock Text="&#9660;" FontSize="7.5"
                                       Margin="5,0,0,0" VerticalAlignment="Center">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Opacity" Value="0.2" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Menu}}}" Value="True">
                                                <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush2}" />
                                                <Setter Property="Opacity" Value="1" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </Grid>
                </MenuItem.Header>
                <MenuItem.Template>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border Name="Border" Margin="0"
                                    Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" 
                                                                  VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                                <Popup Name="Popup" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                   Placement="Bottom"
                                                   IsOpen="{TemplateBinding IsSubmenuOpen}"
                                                   AllowsTransparency="True" 
                                                   Focusable="False"
                                                   PopupAnimation="Fade">
                                    <Border Name="SubmenuBorder" Background="{DynamicResource MenuItemBackgroundBrush}"
                                                        SnapsToDevicePixels="True"
                                                        BorderThickness="1" >
                                        <StackPanel IsItemsHost="True"
                                                                KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </MenuItem.Template>
                <MenuItem.Style>
                    <Style TargetType="{x:Type MenuItem}">
                        <Setter Property="Background" Value="{DynamicResource GrayBrush10}" />
                        <Setter Property="Opacity" Value="1.0" />
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{DynamicResource ControlsDisabledBrush}" />
                                <Setter Property="Opacity" Value="0.7" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource GrayBrush8}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource GrayBrush7}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </MenuItem.Style>
                <MenuItem.ItemTemplate>
                    <DataTemplate>
                        <MenuItem Header="{Binding Name}" ItemsSource="{Binding Buttons}" ToolTip="{Binding Description}" Command="{Binding ExecuteCommand}"/>
                    </DataTemplate>
                </MenuItem.ItemTemplate>
            </MenuItem>
        </Menu>
    </DataTemplate>

    <s:ButtonDataTemplateSelector x:Key="ButtonDataTemplateSelector" />
</ResourceDictionary>